
#pragma once

#ifdef USE_DIRECTX
	typedef ID3D11Buffer		NtVertexBuffer;
	typedef ID3D11Buffer		NtIndexBuffer;
	typedef D3D11_USAGE			NtResourceUsage;
	typedef D3D11_BIND_FLAG		NtBindFlag;
	typedef DXGI_FORMAT			NTCOLORFMT;

#ifdef USE_DIRECTX
	#include "NtD3DRenderer.h"
	//typedef nt::RENDERER::NtD3DRenderer	NtRenderEngine;
	#include "NtDx11Renderer.h"
	struct NtRenderBufferParam
	{
		const D3D11_BUFFER_DESC* m_desc;
		D3D11_SUBRESOURCE_DATA* m_resData;
		ID3D11Buffer** m_buffer;
	};
#endif

#endif	// USE_DIRECTX


	enum eColorFormat
	{
		NT_FMT_NONE,			// D3DFMT_UNKNOWN	DXGI_FORMAT_UNKNOWN
		NT_FMT_A8R8G8B8,		// D3DFMT_A8R8G8B8	DXGI_FORMAT_B8G8R8A8_UNORM & DXGI_FORMAT_B8G8R8A8_UNORM_SRGB1
		NT_FMT_X8R8G8B8,		// D3DFMT_X8R8G8B8	DXGI_FORMAT_B8G8R8X8_UNORM & DXGI_FORMAT_B8G8R8X8_UNORM_SRGB1
		NT_FMT_D16,				// D3DFMT_D16	DXGI_FORMAT_D16_UNORM
		NT_D24S8,				// D3DFMT_S8D24	DXGI_FORMAT_D24_UNORM_S8_UINT
		NT_FMT_MAX,
	};
		
	enum eVShaderModel
	{
		NT_VS_1_1,
		NT_VS_2_0,
		NT_VS_3_0,
		NT_VS_4_0,
		NT_VS_5_0,
	
		NT_MAX_VSHADER_MODEL,
	};

	enum ePShaderModel
	{
		NT_PS_1_1,
		NT_PS_2_0,
		NT_PS_3_0,
		NT_PS_4_0,
		NT_PS_5_0,

		NT_MAX_PSHADER_MODEL,
	};

	enum eFxShaderModel
	{
		NT_FX_2_0,
		NT_FX_4_0,
		NT_FX_4_1,
		NT_FX_5_0,

		NT_MAX_FXSHADER_MODEL,
	};

#ifdef USE_DIRECTX
	enum ePrimitiveTopology
	{
		PRIMITIVE_TOPOLOGY_POINTLIST     = D3D11_PRIMITIVE_TOPOLOGY_POINTLIST,
		PRIMITIVE_TOPOLOGY_LINELIST      = D3D11_PRIMITIVE_TOPOLOGY_LINELIST,
		PRIMITIVE_TOPOLOGY_LINESTRIP     = D3D11_PRIMITIVE_TOPOLOGY_LINESTRIP,
		PRIMITIVE_TOPOLOGY_TRIANGLELIST  = D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST,
		PRIMITIVE_TOPOLOGY_TRIANGLESTRIP = D3D11_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP,
	};
#else
		//make something
		#pragma error
#endif
